apiVersion: v1
kind: Secret
metadata:
  name: autosec-backend-secret
  namespace: autosec
type: Opaque
data:
  jwt-secret: YXV0b3NlY19qd3Rfc2VjcmV0X2tleV8xMjM0NTY3ODkw # autosec_jwt_secret_key_1234567890
  database-url: cG9zdGdyZXNxbDovL2F1dG9zZWM6YXV0b3NlY19wYXNzd29yZEBwb3N0Z3JlcDo1NDMyL2F1dG9zZWM= # postgresql://autosec:autosec_password@postgres:5432/autosec
  mongodb-url: bW9uZ29kYjovL3Jvb3Q6YXV0b3NlY19tb25nb19wYXNzd29yZEBtb25nb2RiOjI3MDE3L2F1dG9zZWNfbG9ncw== # mongodb://root:autosec_mongo_password@mongodb:27017/autosec_logs
  redis-url: cmVkaXM6Ly86YXV0b3NlY19yZWRpc19wYXNzd29yZEByZWRpczA2Mzc5 # redis://:autosec_redis_password@redis:6379
  rabbitmq-url: YW1xcDovL2F1dG9zZWM6YXV0b3NlY19yYWJiaXRfcGFzc3dvcmRAcmFiYml0bXE6NTY3Mg== # amqp://autosec:autosec_rabbit_password@rabbitmq:5672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autosec-backend
  namespace: autosec
  labels:
    app: autosec-backend
    component: backend
    tier: application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: autosec-backend
  template:
    metadata:
      labels:
        app: autosec-backend
        component: backend
        tier: application
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: backend
        image: autosec/backend:1.0.0
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: autosec-backend-secret
              key: jwt-secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: autosec-backend-secret
              key: database-url
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: autosec-backend-secret
              key: mongodb-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: autosec-backend-secret
              key: redis-url
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: autosec-backend-secret
              key: rabbitmq-url
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - autosec-backend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: autosec-backend
  namespace: autosec
  labels:
    app: autosec-backend
    component: backend
    tier: application
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: autosec-backend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: autosec-backend-hpa
  namespace: autosec
  labels:
    app: autosec-backend
    component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: autosec-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80